{"version":3,"sources":["components/counter.jsx","components/counters.jsx","index.js"],"names":["Counter","state","count","props","counter","value","imageUrl","names","styles","fontSize","fontWeight","handleIncrement","product","console","log","setState","this","length","map","name","key","style","className","getBadgeMethod","formatCount","onClick","id","onDelete","renderTags","classes","Component","Counters","counters","handleReset","c","handleDelete","counterId","filter","ReactDom","render","document","getElementById"],"mappings":"qLA6EeA,E,2MA1EbC,MAAQ,CACNC,MAAO,EAAKC,MAAMC,QAAQC,MAC1BC,SAAU,4BACVC,MAAO,CAAC,MAAO,OAAQ,QAAS,U,EAGlCC,OAAS,CACPC,SAAU,GACVC,WAAY,Q,EAGdC,gBAAkB,SAAAC,GAChBC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAEb,MAAO,EAAKD,MAAMC,MAAQ,IAC1CW,QAAQC,IAAI,sB,4EAQZ,OAAgC,IAA5BE,KAAKf,MAAMM,MAAMU,OAAqB,qBAExC,4BACGD,KAAKf,MAAMM,MAAMW,KAAI,SAAAC,GAAI,OACxB,wBAAIC,IAAKD,GAAOA,S,+BAKd,IAAD,OAEP,OADAN,QAAQC,IAAI,QAASE,KAAKb,OAExB,6BAEE,6BACA,0BAAMkB,MAAOL,KAAKR,OAAQc,UAAWN,KAAKO,kBACvCP,KAAKQ,eAER,4BACEC,QAAS,kBAAM,EAAKd,gBAAgB,CAAEe,GAAI,KAC1CL,MAAO,CAAEZ,SAAU,IACnBa,UAAU,4BAHZ,aAOA,4BACEG,QAAS,kBAAM,EAAKtB,MAAMwB,SAAS,EAAKxB,MAAMC,QAAQsB,KACtDL,MAAO,CAAEZ,SAAU,IACnBa,UAAU,6BAHZ,UAOA,6BAC+B,IAA5BN,KAAKf,MAAMM,MAAMU,QAAgB,gBACjCD,KAAKY,iB,uCAOZ,IAAIC,EAAU,mBAEd,OADAA,GAAgC,IAArBb,KAAKf,MAAMC,MAAc,UAAY,Y,oCAInC,IACLA,EAAUc,KAAKf,MAAfC,MACR,OAAiB,IAAVA,EAAc,OAASA,M,GAvEZ4B,aC4CPC,E,2MA1Cb9B,MAAQ,CACN+B,SAAU,CACR,CAAEN,GAAI,EAAGrB,MAAO,GAChB,CAAEqB,GAAI,EAAGrB,MAAO,IAChB,CAAEqB,GAAI,EAAGrB,MAAO,GAChB,CAAEqB,GAAI,EAAGrB,MAAO,K,EAGpB4B,YAAc,WACZ,EAAKhC,MAAM+B,SAASd,KAAI,SAAAgB,GAEtB,OADAA,EAAE7B,MAAQ,EACH6B,M,EAGXC,aAAe,SAAAC,GAEb,IAAMJ,EAAW,EAAK/B,MAAM+B,SAASK,QAAO,SAAAH,GAAC,OAAIA,EAAER,KAAOU,KAC1D,EAAKrB,SAAS,CAAEiB,c,wEAER,IAAD,OACP,OACE,6BACE,4BACEP,QAAST,KAAKiB,YACdX,UAAU,8BAFZ,SAMCN,KAAKf,MAAM+B,SAASd,KAAI,SAAAd,GAAO,OAC9B,kBAAC,EAAD,CACEgB,IAAKhB,EAAQsB,GACbC,SAAU,EAAKQ,aACf/B,QAASA,Y,GAjCE0B,a,MCGvBQ,IAASC,OAAO,kBAAC,EAAD,MAAcC,SAASC,eAAe,U","file":"static/js/main.e7ad4afe.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  state = {\n    count: this.props.counter.value,\n    imageUrl: \"https://picsum.photos/200\",\n    names: [\"Tom\", \"Dick\", \"Harry\", \"Robee\"]\n  };\n\n  styles = {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  };\n\n  handleIncrement = product => {\n    console.log(product);\n    this.setState({ count: this.state.count + 1 });\n    console.log(\"increment clicked\");\n  };\n\n  // doHandleIncrement = () => {\n  //   this.handleIncrement({ id: 1 });\n  // };\n\n  renderTags() {\n    if (this.state.names.length === 0) return \"No names available\";\n    return (\n      <ul>\n        {this.state.names.map(name => (\n          <li key={name}>{name}</li>\n        ))}\n      </ul>\n    );\n  }\n  render() {\n    console.log(\"props\", this.props);\n    return (\n      <div>\n        {/* <img src={this.state.imageUrl} alt=\"\"></img> */}\n        <br></br>\n        <span style={this.styles} className={this.getBadgeMethod()}>\n          {this.formatCount()}\n        </span>\n        <button\n          onClick={() => this.handleIncrement({ id: 1 })}\n          style={{ fontSize: 15 }}\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Increment\n        </button>\n        <button\n          onClick={() => this.props.onDelete(this.props.counter.id)}\n          style={{ fontSize: 15 }}\n          className=\"btn btn-danger btn-sm m-2\"\n        >\n          Delete\n        </button>\n        <div>\n          {this.state.names.length === 0 && \"Add new names\"}\n          {this.renderTags()}\n        </div>\n      </div>\n    );\n  }\n\n  getBadgeMethod() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;\n","import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 1 },\n      { id: 2, value: 44 },\n      { id: 3, value: 2 },\n      { id: 4, value: 0 }\n    ]\n  };\n  handleReset = () => {\n    this.state.counters.map(c => {\n      c.value = 0;\n      return c;\n    });\n  };\n  handleDelete = counterId => {\n    // console.log(\"Event handler called\", counterId);\n    const counters = this.state.counters.filter(c => c.id !== counterId);\n    this.setState({ counters });\n  };\n  render() {\n    return (\n      <div>\n        <button\n          onClick={this.handleReset}\n          className=\"btn btn-primary btn-sm m-2\"\n        >\n          Reset\n        </button>\n        {this.state.counters.map(counter => (\n          <Counter\n            key={counter.id}\n            onDelete={this.handleDelete}\n            counter={counter}\n            // value={counter.value}\n            // id={counter.id}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport Counters from \"./components/counters\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// console.log(element);\nReactDom.render(<Counters />, document.getElementById(\"root\"));\n"],"sourceRoot":""}